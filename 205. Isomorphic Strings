class Solution {
    public boolean isIsomorphic(String x, String y) {
        char[] s = x.toCharArray();
        char[] t = y.toCharArray();
        //reflexive copy
        HashMap<Character, Character> mapping2 = new HashMap<>();
        HashMap<Character, Character> mapping = new HashMap<>();
        for(int i = 0; i < s.length; i++){
            //Checks to see if there exists a mapping between the ith letter in s with the ith letter in t
            if(mapping.containsKey(s[i])){
                if(mapping.get(s[i]) != t[i]){
                    return false;
                }
            }
            else if (mapping2.containsKey(t[i])){
                if((mapping2.get(t[i]) != s[i])){
                    return false;
                }
            }
            //Adds the mapping if it does not exist.
            else{
                mapping.put(s[i], t[i]);
                mapping2.put(t[i], s[i]);
            }
            
        }
        return true;

    }
}

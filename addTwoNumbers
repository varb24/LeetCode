/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
			ListNode returnNode = new ListNode(0), nextNode , head = returnNode;
			int remainder = 0;
            int val1 , val2;
			int tempNum = 0;
			while (l1 != null || l2 != null){
                tempNum = 0;
                if(l1 == null){
                    val1 = 0;
                }
                else{
                    val1 = l1.val;
                    l1 = l1.next;                    
                }
                if(l2 == null){
                    val2 = 0;
                }
                else{
                    val2 = l2.val;
                    l2 = l2.next;                    
                }                
				tempNum = val1 + val2 + remainder;

				if(tempNum >= 10){
					returnNode.next = new ListNode(tempNum - 10 );
                    returnNode = returnNode.next;
                    remainder = 1;
				}
                else{
                    returnNode.next = new ListNode(tempNum);
                    returnNode = returnNode.next;
                    remainder = 0;
                }	
			}
            if(remainder == 1){
                returnNode.next = new ListNode(1);
            }

            return head.next;


    }
}
